D:\Anaconda\envs\train_env\python.exe "C:\Users\DELL\Desktop\论文\车货匹配代码\code(vcm)\RBCNN\kbr_1\Rand_BResNet.py"
C:\Users\DELL\Desktop\论文\车货匹配代码\code(vcm)\RBCNN\kbr_1\Rand_BResNet.py:319: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  train_data = torch.tensor(train_data)
torch.Size([1, 1])
tensor(0.1865, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.2436, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.2879, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1918, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.2267, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1222, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.2366, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1312, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1421, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.3137, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1492, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1976, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0645, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1441, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1899, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1281, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1868, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.2229, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1088, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0960, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.2264, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1981, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1853, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0733, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0764, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0688, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0731, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1646, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0724, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1186, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1012, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0887, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0835, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.2153, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0838, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1537, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0673, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1458, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0689, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0779, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0135, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0302, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0802, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0685, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0798, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0053, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0350, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0600, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0793, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0229, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0565, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0630, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0410, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0365, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0033, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0535, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0329, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0608, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0769, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0266, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0478, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0182, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0429, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0408, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0307, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0167, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0472, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0195, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0791, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0317, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0428, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0248, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0146, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0071, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0029, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0182, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0326, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0016, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0130, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0337, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0061, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0092, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0347, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0052, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0123, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0158, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0326, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0117, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0135, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0152, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0196, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0464, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0015, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0196, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0017, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0038, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0146, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0164, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0081, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0144, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0065, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0066, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0107, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0053, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0010, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0130, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0246, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0013, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0008, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0038, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0109, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(6.6510e-08, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0123, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0339, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0149, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0021, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0001, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0116, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0008, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0010, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0185, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0017, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0142, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0112, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0067, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0118, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0259, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0060, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0034, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0070, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0023, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.6074e-06, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0084, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(7.1646e-06, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0051, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0027, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0033, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0082, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0160, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0005, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0057, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0012, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0052, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0015, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0251, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0059, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(5.0446e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0097, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.9539e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0012, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0017, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0073, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0081, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0020, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0082, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0144, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0043, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0109, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0236, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0172, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0012, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0101, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0050, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0022, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0040, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0032, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0048, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0128, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(9.7027e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0008, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0097, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0173, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0012, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0020, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0008, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0046, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0065, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0120, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0001, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0010, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0030, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0040, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0350, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0242, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0060, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0007, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0073, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(2.8982e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0001, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0049, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0018, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(8.6407e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0057, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0017, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0001, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0050, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(7.8187e-06, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0016, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0009, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0005, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(5.5161e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(3.0352e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0028, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0186, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0105, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0031, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0015, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0091, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(8.8560e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0150, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0007, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0029, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0041, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(8.1274e-06, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0025, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0058, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0019, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0001, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0007, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0106, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0042, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0017, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0016, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0012, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0007, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(2.7974e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0013, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0045, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0010, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0007, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0066, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0128, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0071, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0032, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0103, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0100, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0107, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0001, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0032, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(7.3299e-07, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0074, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0104, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(3.4854e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.8579e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0137, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0013, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0020, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0018, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0103, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0012, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0008, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0271, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0042, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0030, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0020, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0046, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0137, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(3.5199e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0014, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0094, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0042, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0028, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0023, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0001, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.0918e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0031, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0021, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0044, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0007, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0010, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0112, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0009, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0014, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0019, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0062, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0303, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0007, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0012, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0022, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0065, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0049, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0065, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0007, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0093, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0039, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(8.2267e-06, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0412, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0179, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0021, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(9.5680e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0090, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0088, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0007, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0013, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0106, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0017, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0086, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0015, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0163, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0089, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0119, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0007, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0145, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0102, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0043, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0041, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0009, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0044, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0119, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0063, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0088, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0042, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0007, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(4.4448e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0071, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0011, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0044, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0167, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0019, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(4.7212e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0018, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0190, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0034, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0012, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0016, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0009, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0213, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0114, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0062, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0018, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0033, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0014, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0014, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0098, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(3.7739e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0018, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0018, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0077, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0064, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0020, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0009, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0082, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0017, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0083, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0074, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0022, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0158, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0028, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0005, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0036, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0054, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0011, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(8.9147e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0001, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0062, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0014, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0007, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0017, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(3.1948e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0015, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0043, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(8.7965e-07, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0319, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0094, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0128, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0035, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.6485e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0018, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0149, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0216, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0035, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0077, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0073, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0025, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.9735e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0031, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0057, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0222, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0095, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0012, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0091, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0030, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0037, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0015, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0027, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(4.4841e-06, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0005, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(3.3932e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0095, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0007, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0014, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0222, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(2.1803e-06, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0019, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0016, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0047, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0007, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(4.0700e-06, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0063, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.0462e-08, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0035, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0077, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0655, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0092, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0044, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0001, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0043, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0007, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0051, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0028, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0012, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0009, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0017, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0086, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(5.7515e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0076, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0017, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0244, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0079, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0248, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0023, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.7377e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0256, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0043, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0028, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0091, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0098, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0017, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0140, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0019, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.8747e-07, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0076, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0052, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0057, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0005, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0048, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0010, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.5213e-06, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0025, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0061, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0054, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0029, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0088, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0086, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0019, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0024, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0013, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0041, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0109, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0034, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0045, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0212, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(9.5295e-06, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0030, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0007, device='cuda:0', grad_fn=<MseLossBackward0>)
ResNet(
  (conv1): BBBConv2d()
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): BBBConv2d()
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
      (conv2): BBBConv2d()
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): BBBConv2d()
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
      (conv2): BBBConv2d()
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (2): BasicBlock(
      (conv1): BBBConv2d()
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
      (conv2): BBBConv2d()
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (fc1): BBBLinear()
  (fc2): BBBLinear()
)
C:\Users\DELL\Desktop\论文\车货匹配代码\code(vcm)\RBCNN\kbr_1\Rand_BResNet.py:351: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  new_test_data = torch.tensor(new_test_data)
Predicted output: [[0.22578658]]
[0.18652193248271942, 0.243597611784935, 0.28789106011390686, 0.1917703002691269, 0.2267075628042221, 0.12221058458089828, 0.23660004138946533, 0.13121117651462555, 0.14214178919792175, 0.313698947429657, 0.14919856190681458, 0.19757238030433655, 0.06451331079006195, 0.1440943479537964, 0.1898876279592514, 0.12813757359981537, 0.18681560456752777, 0.22288501262664795, 0.10877850651741028, 0.09601229429244995, 0.22640609741210938, 0.19814299046993256, 0.1853163242340088, 0.07326611876487732, 0.07641308754682541, 0.06875981390476227, 0.07306990772485733, 0.1645631641149521, 0.0724436566233635, 0.11859213560819626, 0.10115635395050049, 0.0886664167046547, 0.0835270807147026, 0.2152722030878067, 0.08382035791873932, 0.1537170112133026, 0.06733101606369019, 0.1457504779100418, 0.06889592111110687, 0.07793474197387695, 0.01354239508509636, 0.03021096996963024, 0.08015816658735275, 0.06849607825279236, 0.07976777851581573, 0.00530005618929863, 0.0349896103143692, 0.05995893478393555, 0.07930980622768402, 0.02293509617447853, 0.05654103681445122, 0.06303603947162628, 0.04101681336760521, 0.03647664934396744, 0.0033232802525162697, 0.0534934364259243, 0.03285769745707512, 0.06078145653009415, 0.07687202095985413, 0.026554137468338013, 0.04775058850646019, 0.01817021332681179, 0.042949531227350235, 0.04081982374191284, 0.030701713636517525, 0.016693146899342537, 0.0472249798476696, 0.01946323737502098, 0.07908577471971512, 0.03173280879855156, 0.04281572997570038, 0.024831673130393028, 0.014591467566788197, 0.0070582190528512, 0.0028805125039070845, 0.018179912120103836, 0.032619159668684006, 0.001578606548719108, 0.012963718734681606, 0.03365550935268402, 0.006136447191238403, 0.009166776202619076, 0.03466739133000374, 0.0051607354544103146, 0.012311729602515697, 0.015767274424433708, 0.03262176364660263, 0.011685619130730629, 0.013461561873555183, 0.015239224769175053, 0.01961115002632141, 0.04635636508464813, 0.001464899512939155, 0.019639039412140846, 0.0016596830682829022, 0.0002800174115691334, 0.003808406414464116, 0.014583764597773552, 0.016375403851270676, 0.008142131380736828, 0.01435056608170271, 0.00038509941077791154, 0.006509685423225164, 0.006580478511750698, 0.0106583246961236, 0.005340706557035446, 0.0009710484882816672, 0.012953012250363827, 0.024621155112981796, 0.0012531939428299665, 0.0008095193770714104, 0.0038422623183578253, 0.010875439271330833, 0.0003680038789752871, 6.650952144582334e-08, 0.0001553413167130202, 0.012317867949604988, 0.03394307941198349, 0.014916433952748775, 0.002062673680484295, 0.0001098260618164204, 0.00038500293157994747, 0.011609352193772793, 0.0007698012050241232, 0.0009665069519542158, 0.018531285226345062, 0.0016942562069743872, 0.014160213060677052, 0.011159144341945648, 0.006745931692421436, 0.011752860620617867, 0.025872062891721725, 0.005976883694529533, 0.0034375088289380074, 0.0069693755358457565, 0.002315499121323228, 0.00023496875655837357, 1.6074068298621569e-06, 0.008435428142547607, 7.1646195465291385e-06, 0.005128067452460527, 0.0026564362924546003, 0.00330481119453907, 0.008180173113942146, 0.01598668284714222, 0.0004609952447935939, 0.00041273460374213755, 0.005706711206585169, 0.0012023382587358356, 0.005235911812633276, 0.0014763751532882452, 0.025105031207203865, 0.005920141004025936, 5.044556746724993e-05, 0.00018430415366310626, 0.009744920767843723, 1.9539011191227473e-05, 0.0006137237651273608, 0.0002460376708768308, 0.0011550929630175233, 0.0017384716775268316, 0.00025943858781829476, 0.007263813633471727, 0.008139098063111305, 0.0019733975641429424, 0.008169379085302353, 0.014364778064191341, 0.0042809718288481236, 0.00015209200500976294, 0.0005750464042648673, 0.00034401603625155985, 0.010864613577723503, 0.023613983765244484, 0.017186541110277176, 0.0012130638351663947, 0.00018459476996213198, 0.010085459798574448, 0.005021204706281424, 0.0022172415629029274, 0.003951371647417545, 0.0005873292102478445, 0.0032409662380814552, 0.004792632535099983, 0.012764687649905682, 9.702739771455526e-05, 0.000836312654428184, 0.009735696949064732, 0.017332017421722412, 0.0012145745567977428, 0.0020264030899852514, 0.0007820384344086051, 0.004616959020495415, 0.00654660863801837, 0.012049449607729912, 0.0001423911307938397, 0.0009533142438158393, 0.002964226994663477, 0.0040321918204426765, 0.0349700003862381, 0.024226952344179153, 0.00044640933629125357, 0.006007176358252764, 0.0006900496082380414, 0.007291695568710566, 2.8981819923501462e-05, 0.00012217991752550006, 0.0048545897006988525, 0.0017505907453596592, 8.640702435513958e-05, 0.00024087984638754278, 0.005690769292414188, 0.0017013883916661143, 0.00011468241427792236, 0.00496454956009984, 7.81866765464656e-06, 0.0016341399168595672, 0.000897877907846123, 0.0004744650796055794, 5.516065357369371e-05, 0.00026624626480042934, 0.00029528693994507194, 3.0352081012097187e-05, 0.002789147663861513, 0.0004202678974252194, 0.01855054497718811, 0.01048326212912798, 0.0030531459487974644, 0.0015409135958179832, 0.00905204564332962, 8.855976193444803e-05, 0.015037477016448975, 0.0007430762052536011, 0.002852140460163355, 0.004114143084734678, 0.0001650716149015352, 8.127404726110399e-06, 0.0002703702775761485, 0.002532453276216984, 0.0057527110911905766, 0.0019190179882571101, 0.00013203076377976686, 0.0006596586317755282, 0.01058490201830864, 0.004183182027190924, 0.0016920280177146196, 0.0015684219542890787, 0.0011668925872072577, 0.0006990835536271334, 0.0005525124724954367, 2.797387060127221e-05, 0.0013096182374283671, 0.00449757743626833, 0.0009642207296565175, 0.0006902492605149746, 0.00660114549100399, 0.012783813290297985, 0.007135138846933842, 0.003198272781446576, 0.01030473131686449, 0.009985282085835934, 0.010699969716370106, 0.0001334271510131657, 0.0032196391839534044, 7.329863365157507e-07, 0.007361216936260462, 0.01039024256169796, 3.4854096156777814e-05, 1.8579285097075626e-05, 0.013693968765437603, 0.0012621850473806262, 0.0020031151361763477, 0.00029831513529643416, 0.0004071091825608164, 0.0018323241965845227, 0.010317256674170494, 0.0011663999175652862, 0.00015195457672234625, 0.0008181052980944514, 0.0002458222152199596, 0.0003686633426696062, 0.027128303423523903, 0.004151343833655119, 0.0029693404212594032, 0.0019748143386095762, 0.004649714566767216, 0.013683337718248367, 3.5199092963011935e-05, 0.0014258078299462795, 0.009436434134840965, 0.004236740991473198, 0.0028270152397453785, 0.0022523333318531513, 0.00011418794747442007, 1.0917727195192128e-05, 0.00313901761546731, 0.0021207251120358706, 0.004382479935884476, 0.0006765747093595564, 0.0010180827230215073, 0.011225897818803787, 0.0009080925374291837, 0.0014371703146025538, 0.0019088638946413994, 0.006179886404424906, 0.030267011374235153, 0.0006845819298177958, 0.0012192517751827836, 0.002199108712375164, 0.006535552442073822, 0.0005751793505623937, 0.00487354164943099, 0.006458627060055733, 0.0006807073368690908, 0.009284844622015953, 0.003934272564947605, 8.226686986745335e-06, 0.04116035997867584, 0.00017175287939608097, 0.017934944480657578, 0.0021396030206233263, 9.567997039994225e-05, 0.008981083519756794, 0.0006106761284172535, 0.00878951232880354, 0.0007249322370626032, 0.001345088821835816, 0.010632514022290707, 0.0017442147945985198, 0.008560093119740486, 0.0015295447083190084, 0.0004456294991541654, 0.016271090134978294, 0.008863036520779133, 0.011907050386071205, 0.0002454971254337579, 0.0006979713798500597, 0.01447269506752491, 0.010211225599050522, 0.004283421207219362, 0.004101765342056751, 0.0009421815630048513, 0.004432323854416609, 0.011901574209332466, 0.006333081051707268, 0.008831517770886421, 0.004219320137053728, 0.0006953181582503021, 4.44481338490732e-05, 0.007107665296643972, 0.001139252446591854, 0.004354070406407118, 0.016674116253852844, 0.0019336979603394866, 4.7211869969032705e-05, 0.0017702799523249269, 0.019019026309251785, 0.003406146541237831, 0.0011944066500291228, 0.001648978446610272, 0.0009287241264246404, 0.021255748346447945, 0.011380957439541817, 0.006198258139193058, 0.0017823154339566827, 0.0002324774395674467, 0.0033196150325238705, 0.001429637661203742, 0.0013686990132555366, 0.009834596887230873, 3.7739424442406744e-05, 0.0017841440858319402, 0.0018423598958179355, 0.007668135222047567, 0.0003445911279413849, 0.006408437620848417, 0.002029328839853406, 0.0009071425884030759, 0.008209308609366417, 0.0017364207888022065, 0.008303835988044739, 0.0073593552224338055, 0.0022069166880100965, 0.0004021855420432985, 0.015798376873135567, 0.0027591572143137455, 0.0002535303356125951, 0.0005037529626861215, 0.003601368283852935, 0.005421055015176535, 0.001085910596884787, 0.0005648275255225599, 8.914688805816695e-05, 0.00012345711002126336, 0.0062358868308365345, 0.001363437157124281, 0.000656242307741195, 0.0017433983739465475, 3.194808596163057e-05, 0.0014861959498375654, 0.00021032756194472313, 0.004348200745880604, 0.0002188979124184698, 8.796451425041596e-07, 0.0002883434062823653, 0.03191613405942917, 0.009446635842323303, 0.01278677862137556, 0.0034938689786940813, 1.6484811567352153e-05, 0.001825879910029471, 0.014921791851520538, 0.02158755622804165, 0.0035174705553799868, 0.007749637123197317, 0.007337351329624653, 0.0024705890100449324, 1.973459802684374e-05, 0.0031140847131609917, 0.005650082603096962, 0.02217390388250351, 0.009476333856582642, 0.00019096089818049222, 0.001235268427990377, 0.009128311648964882, 0.0029665445908904076, 0.0003831578651443124, 0.003731655888259411, 0.0014913681661710143, 0.0026907608844339848, 4.484057626541471e-06, 0.0005267884116619825, 3.3931642974494025e-05, 0.009476613253355026, 0.0004481482901610434, 0.0007002983475103974, 0.0013757976703345776, 0.02221873588860035, 2.18026184484188e-06, 0.0018826887244358659, 0.0015529515221714973, 0.0047149271704256535, 0.0006853588274680078, 4.069997430633521e-06, 0.006345793604850769, 1.0461519650561968e-08, 0.003519546939060092, 0.007708841934800148, 0.065491683781147, 0.009150175377726555, 0.004404181148856878, 0.0001472679723519832, 0.004270259756594896, 0.0006618580082431436, 0.005134232807904482, 0.0028201581444591284, 0.0012103706831112504, 0.0008929338655434549, 0.0016706525348126888, 0.00856593158096075, 5.751465505454689e-05, 0.007576338946819305, 0.0016801173333078623, 0.02441783994436264, 0.007882073521614075, 0.024758169427514076, 0.002253260463476181, 1.7377224139636382e-05, 0.025569980964064598, 0.004296260420233011, 0.002763584489002824, 0.009129776619374752, 0.009764239192008972, 0.0016667409799993038, 0.013993176631629467, 0.0018567340448498726, 1.8747431340671028e-07, 0.007606434170156717, 0.00523913512006402, 0.0057031987234950066, 0.0005110514466650784, 0.004798172041773796, 0.0010341601446270943, 1.5212729067570763e-06, 0.0024964604526758194, 0.006143532227724791, 0.005359623581171036, 0.00294432882219553, 0.00880358275026083, 0.008563200011849403, 0.0018502097809687257, 0.0024150535464286804, 0.00133288255892694, 0.004144911654293537, 0.010901717469096184, 0.0033885324373841286, 0.0044511160813272, 0.021172909066081047, 9.529470844427124e-06, 0.0030409451574087143, 0.0006504529155790806]

进程已结束,退出代码0
