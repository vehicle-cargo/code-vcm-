D:\Anaconda\envs\train_env\python.exe "C:\Users\DELL\Desktop\论文\车货匹配代码\code(vcm)\RBCNN\kbr_1\AHP_BResNet.py"
C:\Users\DELL\Desktop\论文\车货匹配代码\code(vcm)\RBCNN\kbr_1\AHP_BResNet.py:319: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  train_data = torch.tensor(train_data)
torch.Size([1, 1])
tensor(0.2211, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.2286, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.3128, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.2721, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.2335, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.2450, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.2865, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1374, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1548, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.2061, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0896, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1993, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0921, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1095, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1103, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1295, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.2023, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0902, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1617, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0468, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0819, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1666, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0537, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1518, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0934, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0881, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0784, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0783, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1739, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0897, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0738, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0798, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0690, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0649, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0639, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0190, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0646, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0518, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0322, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0889, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0465, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0705, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0280, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0211, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0560, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1228, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0067, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0239, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0373, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0626, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0826, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0016, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0780, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0873, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0384, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0224, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0079, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0394, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0282, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1338, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0211, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0176, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0033, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0057, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0155, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0442, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0289, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(4.1593e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0054, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0232, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0431, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0243, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0026, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0071, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0260, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0163, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0204, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0207, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0429, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0156, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0056, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0123, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0097, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0135, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0335, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0015, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0161, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0214, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0001, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0072, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0285, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0112, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0008, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0101, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0095, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0192, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0079, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0502, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0210, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0142, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0018, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0114, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0118, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0174, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0043, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.6893e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0118, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0038, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0030, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0030, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0012, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0001, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0174, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0045, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0026, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0023, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0005, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0013, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0032, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0137, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0113, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0033, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(2.3803e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0141, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0012, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0155, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0013, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.9091e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0206, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0015, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0241, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0128, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0011, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0051, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0026, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0341, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0041, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0102, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(9.1755e-08, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0215, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0139, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0016, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0007, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0027, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0073, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0051, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0031, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0357, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0008, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0132, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0022, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0012, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0010, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0016, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0010, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0030, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0020, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0139, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0009, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0048, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0070, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0047, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0163, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0022, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0120, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0097, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0109, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0013, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0019, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0001, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0010, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0083, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0007, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0108, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0012, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0447, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0366, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0018, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0055, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0283, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0001, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0022, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0063, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0043, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0067, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0201, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0081, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0013, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0023, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0065, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0065, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0243, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0085, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0040, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0017, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0009, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0141, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0013, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(3.3922e-06, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0118, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0026, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0049, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0005, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0033, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0005, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0021, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0014, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0035, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0050, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0143, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0005, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0005, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0119, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0048, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0008, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0318, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0091, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0019, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0001, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0149, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0021, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0098, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0012, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0111, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0026, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0046, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0101, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0012, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0009, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0001, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(4.3842e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0119, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0119, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0055, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0010, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0021, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0152, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0156, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0030, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0019, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0014, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0001, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0011, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0243, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0027, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0043, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0005, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0322, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(2.7051e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0024, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0118, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0034, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0035, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0074, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0019, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0289, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(4.2187e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0008, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(7.3177e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(7.1702e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0042, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0106, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0032, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0091, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0040, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0084, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0045, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0110, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0019, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0059, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(9.9072e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0008, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0023, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0005, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0016, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0155, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0010, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0013, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0040, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(2.3866e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0031, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0001, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0063, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0001, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0078, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0010, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0129, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0054, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0138, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0090, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0029, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(3.3426e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0302, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0231, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0106, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0068, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0009, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0021, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0016, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0118, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(5.3529e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0021, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0026, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0043, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(6.5846e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0007, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0123, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0043, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0042, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0131, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0007, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0010, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0007, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0041, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0020, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0007, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0113, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0035, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0017, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0005, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0008, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0031, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0011, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0009, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0064, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0070, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0079, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0175, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0030, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0055, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(2.5256e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0009, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0071, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0049, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0018, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0023, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0037, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0084, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0040, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(7.8207e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0121, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0146, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0017, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0213, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0092, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0021, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0048, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0022, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0080, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(6.0293e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0010, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0020, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0146, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0209, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0009, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0060, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0022, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0015, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0013, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0098, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0011, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0047, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0055, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0009, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0105, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0016, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0111, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0031, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0019, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0039, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0104, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0021, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0166, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0063, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(3.4559e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0059, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0033, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0056, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0023, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0014, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0018, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(9.0365e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0011, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(8.2672e-07, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0008, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0040, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0043, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0058, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(5.1164e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0001, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0173, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0009, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0268, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0087, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0013, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0025, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(7.0838e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(2.6708e-07, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0012, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0021, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0005, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(9.6986e-06, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0010, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(7.7292e-06, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0229, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0049, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.1533e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0020, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0162, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0058, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0014, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0017, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0073, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0045, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0010, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0034, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0175, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.1474e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0029, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(6.1285e-07, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0063, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0001, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0080, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0001, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(3.8577e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0064, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0022, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0194, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0015, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0008, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0024, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(6.4902e-06, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0025, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0061, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(7.2600e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0048, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0026, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0012, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0049, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(4.1911e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(6.2558e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0008, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0092, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0023, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0011, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0026, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0034, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0184, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0041, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(7.2905e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0009, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0084, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.7277e-06, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0019, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0146, device='cuda:0', grad_fn=<MseLossBackward0>)
ResNet(
  (conv1): BBBConv2d()
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): BBBConv2d()
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
      (conv2): BBBConv2d()
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): BBBConv2d()
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
      (conv2): BBBConv2d()
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (2): BasicBlock(
      (conv1): BBBConv2d()
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
      (conv2): BBBConv2d()
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (fc1): BBBLinear()
  (fc2): BBBLinear()
)
C:\Users\DELL\Desktop\论文\车货匹配代码\code(vcm)\RBCNN\kbr_1\AHP_BResNet.py:351: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  new_test_data = torch.tensor(new_test_data)
Predicted output: [[0.62893325]]
[0.22109802067279816, 0.22855761647224426, 0.312752366065979, 0.27205151319503784, 0.233528733253479, 0.24496416747570038, 0.2865450978279114, 0.13737843930721283, 0.15483921766281128, 0.20613737404346466, 0.08961267024278641, 0.19927023351192474, 0.09208759665489197, 0.10951533168554306, 0.11028999835252762, 0.12945403158664703, 0.20228782296180725, 0.09023115038871765, 0.1617169827222824, 0.046764571219682693, 0.08187329769134521, 0.16662339866161346, 0.05374148115515709, 0.15182718634605408, 0.09338556230068207, 0.08812212944030762, 0.07843641936779022, 0.07829784601926804, 0.17386290431022644, 0.08967994898557663, 0.07380333542823792, 0.07980235666036606, 0.06897513568401337, 0.06494161486625671, 0.06386218219995499, 0.019024407491087914, 0.06459252536296844, 0.05177818983793259, 0.03218616172671318, 0.08885063976049423, 0.046497829258441925, 0.07048728317022324, 0.027990929782390594, 0.02110678143799305, 0.05595197156071663, 0.12281619012355804, 0.006735777482390404, 0.023922624066472054, 0.03727055713534355, 0.06263677775859833, 0.08255111426115036, 0.0015510882949456573, 0.10022465139627457, 0.07803621143102646, 0.08734539151191711, 0.03838033229112625, 0.022371061146259308, 0.007916171103715897, 0.03942931443452835, 0.028191834688186646, 0.1338202953338623, 0.021098945289850235, 0.017583753913640976, 0.003329170634970069, 0.005682116840034723, 0.015544001944363117, 0.04415158927440643, 0.02888408862054348, 4.15932408941444e-05, 0.0054046958684921265, 0.02320524863898754, 0.04306471347808838, 0.024287715554237366, 0.00261850212700665, 0.007121971342712641, 0.02596520446240902, 0.016285870224237442, 0.020411929115653038, 0.020714331418275833, 0.00025821258896030486, 0.042919036000967026, 0.015606345608830452, 0.005642553325742483, 0.012296123430132866, 0.009708699770271778, 0.013535982929170132, 0.033472150564193726, 0.001527793356217444, 0.01612989418208599, 0.021355878561735153, 0.00014155698590911925, 0.007221247535198927, 0.02847643755376339, 0.011218481697142124, 0.0007901233620941639, 0.010089737363159657, 0.009526885114610195, 0.01917480118572712, 0.007936426438391209, 0.050153475254774094, 0.020984699949622154, 0.014200255274772644, 0.001826405874453485, 0.011426910758018494, 0.011794631369411945, 0.01742798462510109, 0.0043168338015675545, 1.689314922259655e-05, 0.011803514324128628, 0.0037897590082138777, 0.00018589722458273172, 0.002988887717947364, 0.0030040040146559477, 0.0012025086907669902, 0.00014953812933526933, 0.017405381426215172, 0.004519358277320862, 0.002592461882159114, 0.0022585848346352577, 0.00031180691439658403, 0.0005245949723757803, 0.001347144483588636, 0.0032234855461865664, 0.013713122345507145, 0.011256139725446701, 0.0032543952111154795, 2.380287514824886e-05, 0.014117415994405746, 0.001222482998855412, 0.015468158759176731, 0.0012669021962210536, 1.9090683053946123e-05, 0.020602814853191376, 0.0004184290883131325, 0.001487115165218711, 0.02407195046544075, 0.012751111760735512, 0.0011473452905192971, 0.005084391217678785, 0.002569246105849743, 0.03407729044556618, 0.004054200369864702, 0.010247820056974888, 0.0003738918458111584, 9.175495563340519e-08, 0.021478191018104553, 0.013938612304627895, 0.0015749994199723005, 0.0002916686935350299, 0.0006789675098843873, 0.0027001628186553717, 0.007295982912182808, 0.005115118809044361, 0.0030731717124581337, 0.035663772374391556, 0.0008065500878728926, 0.013217518106102943, 0.0021983108017593622, 0.0011635415721684694, 0.0009835524251684546, 0.0015947988722473383, 0.0010389451636001468, 0.003034955123439431, 0.001960884081199765, 0.013948775827884674, 0.0008565161842852831, 0.004826584365218878, 0.00017263670451939106, 0.006963716819882393, 0.004704717081040144, 0.00031869951635599136, 0.01633266918361187, 0.0022329147905111313, 0.012048432603478432, 0.00971431564539671, 0.010876001790165901, 0.0003072212857659906, 0.001311846193857491, 0.0019111080328002572, 0.00011758376786019653, 0.0010389029048383236, 0.00827183946967125, 0.0007366454810835421, 0.010766602121293545, 0.0011998149566352367, 0.04473698511719704, 0.03656991571187973, 0.0018177173333242536, 0.005547665059566498, 0.0282998476177454, 0.00012720815720967948, 0.00219546677544713, 0.006286006420850754, 0.00037998572224751115, 0.0042931148782372475, 0.006728695705533028, 0.02013794519007206, 0.00809229351580143, 0.0012752428883686662, 0.0022866956423968077, 0.006524392403662205, 0.006484392564743757, 0.024295426905155182, 0.008491848595440388, 0.0006374444928951561, 0.004005997441709042, 0.0016986960545182228, 0.0008566260803490877, 0.01405431516468525, 0.0013214468490332365, 3.3921664908120874e-06, 0.011774701997637749, 0.0025729332119226456, 0.004873715341091156, 0.00047847494715824723, 0.0032902441453188658, 0.0005319007905200124, 0.0021395408548414707, 0.0013812915422022343, 0.0035060078371316195, 0.005020413082093, 0.01429046131670475, 0.0005259254830889404, 0.000526484742294997, 0.011948578990995884, 0.0047527337446808815, 0.000805196410510689, 0.031765375286340714, 0.0003078327572438866, 0.009075243957340717, 0.001887418096885085, 0.00013738637790083885, 0.014882576651871204, 0.002102559432387352, 0.009824494831264019, 0.00024058946291916072, 0.001206205110065639, 0.011083259247243404, 0.0026346680242568254, 0.0006022192537784576, 0.004583870992064476, 0.010072549805045128, 0.001179945538751781, 0.0005953815998509526, 0.0009185103117488325, 0.00011123443255200982, 4.3841628212248906e-05, 0.011880856938660145, 0.011919589713215828, 0.0054533700458705425, 0.0010107606649398804, 0.0003166364331264049, 0.002143212128430605, 0.0004070322320330888, 0.01517315860837698, 0.015551980584859848, 0.002956597600132227, 0.0019290694035589695, 0.001362389768473804, 0.00014210712106432766, 0.0003120553446933627, 0.0010837678564712405, 0.02429644763469696, 0.002669177483767271, 0.004286217037588358, 0.0006120828911662102, 0.0004629470349755138, 0.03221955895423889, 2.7050835342379287e-05, 0.0023859264329075813, 0.0005634161061607301, 0.011809608899056911, 0.0034130464773625135, 0.003502391278743744, 0.007371358573436737, 0.0018825167790055275, 0.028901992365717888, 4.218655885779299e-05, 0.0002465624420437962, 0.0008124448359012604, 7.317672134377062e-05, 7.17015063855797e-05, 0.004238450434058905, 0.010565544478595257, 0.0032358563039451838, 0.009120401926338673, 0.003988026641309261, 0.008381412364542484, 0.0003795466327574104, 0.004461252596229315, 0.011002984829246998, 0.0018962559988722205, 0.005889846011996269, 9.907213825499639e-05, 0.0008447888540104032, 0.002291443757712841, 0.0004737707204185426, 0.0016286990139633417, 0.01547000091522932, 0.0010265501914545894, 0.001334196189418435, 0.004035844933241606, 2.3865728508098982e-05, 0.003138984087854624, 0.00014275444846134633, 0.006335881073027849, 0.00010181758989347145, 0.007768603507429361, 0.0010103135136887431, 0.012883548624813557, 0.005423703696578741, 0.013823471963405609, 0.008956185542047024, 0.002851026365533471, 3.342576019349508e-05, 0.030160417780280113, 0.02307109162211418, 0.010562242940068245, 0.006829441990703344, 0.0009090204839594662, 0.0020873011089861393, 0.0015800632536411285, 0.011802607215940952, 5.352899097488262e-05, 0.0021223195362836123, 0.00022236446966417134, 0.0025955401360988617, 0.004314351361244917, 6.584586662938818e-05, 0.0006515136337839067, 0.01233912818133831, 0.004258571192622185, 0.004245713818818331, 0.013094854541122913, 0.0007042930810712278, 0.000978396157734096, 0.00035295795532874763, 0.0007399720489047468, 0.004056432284414768, 0.0019854381680488586, 0.0007295961258932948, 0.01128553319722414, 0.003482373431324959, 0.0002595321857370436, 0.0016946598188951612, 0.0004999774391762912, 0.0007734545506536961, 0.003056422108784318, 0.001078321598470211, 0.000917757221031934, 0.006353072356432676, 0.007042206823825836, 0.007880409248173237, 0.01751597411930561, 0.0029988118913024664, 0.005530235823243856, 0.000583793327677995, 0.00027582564507611096, 2.525630952732172e-05, 0.0009311352041549981, 0.0002689671528059989, 0.007111472077667713, 0.0005546967149712145, 0.0049331411719322205, 0.0017637868877500296, 0.0022595678456127644, 0.003729533404111862, 0.00835750624537468, 0.004018195904791355, 7.820716564310715e-05, 0.012112339027225971, 0.014627805911004543, 0.0017083889106288552, 0.0005587710184045136, 0.021311579272150993, 0.009170911274850368, 0.0002802992530632764, 0.0020680492743849754, 0.004794941749423742, 0.0022190059535205364, 0.008031134493649006, 6.029329597367905e-05, 0.0010415961733087897, 0.0019898389000445604, 0.014599867165088654, 0.020922353491187096, 0.0008863674593158066, 0.00602188054472208, 0.002229046542197466, 0.0015376127557829022, 0.0012833718210458755, 0.009751915000379086, 0.0010792280081659555, 0.004682616796344519, 0.0054585873149335384, 0.0008684877539053559, 0.01053507998585701, 0.0016378695145249367, 0.011101464740931988, 0.0005861417157575488, 0.0030713346786797047, 0.0019070323323830962, 0.0006239784997887909, 0.003863748861476779, 0.010373241268098354, 0.0021249426063150167, 0.01664399355649948, 0.006277843378484249, 3.455896148807369e-05, 0.00041115767089650035, 0.005923093296587467, 0.003292165696620941, 0.005587349645793438, 0.0022874907590448856, 0.001403218018822372, 0.001835687318816781, 9.036492701852694e-05, 0.0010857642628252506, 8.267156772490125e-07, 0.0007549935253337026, 0.004002120345830917, 0.0002748089609667659, 0.004291967023164034, 0.005815496668219566, 5.1163766329409555e-05, 0.00013617552758660167, 0.01734168268740177, 0.000876090838573873, 0.02683137357234955, 0.0003090501995757222, 0.008677925914525986, 0.00038081809179857373, 0.0013325660256668925, 0.0025273028295487165, 0.00023053621407598257, 0.0003448960487730801, 7.083803211571649e-05, 2.670843741725548e-07, 0.0011710295220836997, 0.002124769613146782, 0.0005403234390541911, 9.698573194327764e-06, 0.0010254294611513615, 7.729175194981508e-06, 0.0005623229662887752, 0.022925904020667076, 0.0049333758652210236, 1.1532845746842213e-05, 0.0020061414688825607, 0.016207385808229446, 0.005811779294162989, 0.001433840487152338, 0.0017478722147643566, 0.007343607023358345, 0.004520416259765625, 0.0009512918768450618, 0.0033970021177083254, 0.017467480152845383, 1.1474421626189724e-05, 0.002868164796382189, 6.128500444901874e-07, 0.0003467249043751508, 0.006339326035231352, 0.00010757370182545856, 0.008017150685191154, 0.00013972340093459934, 3.8576676161028445e-05, 0.006413723342120647, 0.002192579908296466, 0.0006369660259224474, 0.019394122064113617, 0.0015056621050462127, 0.0008078828104771674, 0.0024220331106334925, 6.490224677691003e-06, 0.002479135524481535, 0.0061130886897444725, 0.0006100922473706305, 7.260016718646511e-05, 0.0048111798241734505, 0.0025742726866155863, 0.0012326700380071998, 0.004853513091802597, 4.191059633740224e-05, 6.255793414311484e-05, 0.0008444094564765692, 0.009237352758646011, 0.002349383197724819, 0.00037470136885531247, 0.0010703273583203554, 0.0026011031586676836, 0.003403466660529375, 0.018441662192344666, 0.004112730734050274, 7.290521170943975e-05, 0.000890983734279871, 0.008400204591453075, 1.7276515791309066e-06, 0.001936695072799921, 0.014598721638321877]

进程已结束,退出代码0
