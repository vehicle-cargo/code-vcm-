D:\Anaconda\envs\train_env\python.exe "C:\Users\DELL\Desktop\论文\车货匹配代码\code(vcm)\RBCNN\kbr_1\SVD_BResNet.py"
C:\Users\DELL\Desktop\论文\车货匹配代码\code(vcm)\RBCNN\kbr_1\SVD_BResNet.py:319: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  train_data = torch.tensor(train_data)
torch.Size([1, 1])
tensor(1.1648, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.3022, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.4558, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.8856, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.9563, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.1408, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.9263, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.1080, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.7932, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.7857, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.5589, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.5621, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.7448, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.6318, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.6804, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.6570, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.6066, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.4810, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.4950, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.3958, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.5581, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.4708, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.5765, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.3800, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.3893, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.6041, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.5579, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.3672, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.4394, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.3295, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.2687, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.2094, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.3499, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.2286, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.3359, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.4129, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.3203, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.2905, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.4284, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0975, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1901, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.3276, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0873, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0592, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1614, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1726, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0572, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1240, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0684, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1211, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0816, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0969, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1208, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0883, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1251, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0994, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1321, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1115, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1019, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1530, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0788, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0597, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1223, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0121, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0831, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0387, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0637, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0995, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0795, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0776, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0493, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0555, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1532, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0659, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0342, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0928, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0255, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0247, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0485, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0735, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0290, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0191, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0382, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0191, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0636, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0204, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0047, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0217, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0695, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0108, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0125, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0242, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0112, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0801, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0067, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0464, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0164, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0510, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0336, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0180, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0106, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0538, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(2.2689e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0064, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0060, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0047, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0089, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0598, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0023, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0021, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0171, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0150, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0039, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0295, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(5.8353e-07, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0060, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0084, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0429, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0052, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0130, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0446, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0064, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0300, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0103, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0146, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0031, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0041, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0148, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0077, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0042, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0030, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0023, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0011, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0028, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0168, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0043, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0049, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0283, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0045, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0024, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0287, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0001, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0014, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0013, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0024, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0060, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0020, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0022, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0297, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0057, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0146, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(9.8956e-06, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0012, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0090, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(9.4319e-06, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(2.3449e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0107, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0057, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0050, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0008, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0150, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0028, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0301, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0142, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.9532e-08, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0023, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0016, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0059, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0264, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0030, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0024, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0034, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0011, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0111, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0013, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0207, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0031, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0099, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0010, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0058, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(6.6200e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0033, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0062, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0020, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0008, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0064, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(6.6929e-06, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0097, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0028, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0033, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(5.5104e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0190, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0064, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0024, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(3.1660e-06, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0014, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0009, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0018, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0045, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0100, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0023, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(2.4030e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0012, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0015, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0005, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0024, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0053, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0116, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0020, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0309, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0008, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0027, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.9030e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0260, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0023, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(8.9875e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0167, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0007, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0060, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0017, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0025, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0030, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0007, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0208, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(4.7861e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0021, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0114, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0014, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0067, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0063, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0052, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.8119e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0063, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0226, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0051, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0010, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0103, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0008, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0013, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0025, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.2052e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0343, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0103, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0335, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0040, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0001, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0016, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(4.5842e-07, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0263, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(3.4495e-06, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0020, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0005, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0065, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.0463e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0014, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0171, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0054, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0016, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0092, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0027, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0040, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0205, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0146, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.2571e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0066, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0210, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0001, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0062, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0026, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0016, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.4384e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0087, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.9508e-06, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0037, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0051, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0008, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0052, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0103, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0046, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0019, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0045, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0075, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(6.3501e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0020, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0194, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0043, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0040, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0125, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0160, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0046, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0111, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0150, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0010, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0001, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(2.4654e-06, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0054, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0009, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0122, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0049, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0084, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0019, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0001, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0016, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0029, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0017, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0069, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0013, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0107, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(7.6990e-07, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(3.2365e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0025, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0082, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0040, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0009, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0013, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0009, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0063, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0010, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0008, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0302, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0029, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0030, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0053, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(5.2404e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0021, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0055, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0018, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0013, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(8.3735e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0008, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0286, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0244, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0009, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0059, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0143, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0005, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0022, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0075, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(5.3390e-06, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0068, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0348, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(3.4576e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0066, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0022, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0043, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0035, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0009, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.5336e-07, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0140, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0101, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0070, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(5.6535e-07, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0072, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0008, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0082, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0146, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(6.7996e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0095, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0029, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0073, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0009, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0037, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0134, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0027, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.5964e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(2.6733e-06, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0001, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0080, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0024, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0073, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0194, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0039, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(3.2360e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0027, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0012, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0053, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0017, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0071, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0014, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0001, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0005, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(2.2542e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0208, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0058, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0032, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(4.4533e-07, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0164, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0158, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0097, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0100, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0007, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0021, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0147, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0028, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0077, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0017, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0019, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0067, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0005, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0117, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0186, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0021, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0247, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0010, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0077, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0291, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0017, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0009, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(2.0489e-06, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(6.1092e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0022, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0026, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0185, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0023, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0130, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0014, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0113, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.1146e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0149, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0014, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0039, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0025, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0123, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0055, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0043, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0052, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(5.7786e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0028, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0038, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0037, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0014, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(8.5483e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(9.9574e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0021, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0067, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0063, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0005, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0060, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0076, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0062, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0009, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0020, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0099, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0009, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0125, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0041, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0020, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0054, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0015, device='cuda:0', grad_fn=<MseLossBackward0>)
ResNet(
  (conv1): BBBConv2d()
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): BBBConv2d()
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
      (conv2): BBBConv2d()
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): BBBConv2d()
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
      (conv2): BBBConv2d()
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (2): BasicBlock(
      (conv1): BBBConv2d()
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
      (conv2): BBBConv2d()
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (fc1): BBBLinear()
  (fc2): BBBLinear()
)
C:\Users\DELL\Desktop\论文\车货匹配代码\code(vcm)\RBCNN\kbr_1\SVD_BResNet.py:351: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  new_test_data = torch.tensor(new_test_data)
Predicted output: [[0.23542723]]
[1.164786696434021, 1.302158236503601, 1.4557974338531494, 0.8856092095375061, 0.956261396408081, 1.140761375427246, 0.9263489246368408, 1.1079617738723755, 0.7931928038597107, 0.7856726050376892, 0.5589364171028137, 0.5620765686035156, 0.7447793483734131, 0.6317712664604187, 0.680374801158905, 0.6569913625717163, 0.6066010594367981, 0.480998694896698, 0.49499231576919556, 0.3957589566707611, 0.5580697059631348, 0.4708278477191925, 0.5764757394790649, 0.3800225257873535, 0.38931694626808167, 0.6040948629379272, 0.5579037070274353, 0.3671693205833435, 0.4394058585166931, 0.3295459449291229, 0.2687144875526428, 0.20936208963394165, 0.34993618726730347, 0.2285526543855667, 0.33585184812545776, 0.41293010115623474, 0.32030928134918213, 0.29050877690315247, 0.4283580780029297, 0.09750881791114807, 0.19007182121276855, 0.3276482820510864, 0.08729536831378937, 0.05921865627169609, 0.1613619029521942, 0.1725844144821167, 0.05717792734503746, 0.12401026487350464, 0.06841614097356796, 0.12106149643659592, 0.08161234855651855, 0.09690062701702118, 0.12080372869968414, 0.08831651508808136, 0.1250886619091034, 0.0993984118103981, 0.1320616453886032, 0.11149253696203232, 0.10193339735269547, 0.1530289500951767, 0.07879216969013214, 0.05970444902777672, 0.12230749428272247, 0.01213920023292303, 0.08307535201311111, 0.03870181366801262, 0.06369072198867798, 0.09953954815864563, 0.0795142725110054, 0.07755637168884277, 0.049295224249362946, 0.05545205622911453, 0.15323899686336517, 0.06590337306261063, 0.03420157730579376, 0.09284333884716034, 0.025478387251496315, 0.024653175845742226, 0.0485314205288887, 0.07345881313085556, 0.028978319838643074, 0.01911851204931736, 0.038169536739587784, 0.019075078889727592, 0.06363052129745483, 0.020392155274748802, 0.004716805648058653, 0.021721042692661285, 0.06945057958364487, 0.010786700062453747, 0.012531086802482605, 0.024236740544438362, 0.011196989566087723, 0.08010023087263107, 0.0066727083176374435, 0.046432267874479294, 0.016393199563026428, 0.05095569044351578, 0.0335589163005352, 0.018000788986682892, 0.01061457209289074, 0.05376134440302849, 2.2689218894811347e-05, 0.006378024350851774, 0.005968746263533831, 0.0002211825776612386, 0.0046630860306322575, 0.00887294951826334, 0.00041217898251488805, 0.05979545786976814, 0.002276382176205516, 0.0021063971798866987, 0.017084984108805656, 0.01497839018702507, 0.0038548046723008156, 0.029468851163983345, 5.835327101522125e-07, 0.00603912491351366, 0.008355449885129929, 0.042906831949949265, 0.005240161903202534, 0.013004525564610958, 0.044559068977832794, 0.006377272307872772, 0.029976671561598778, 0.010335040278732777, 0.014570224098861217, 0.00021533394465222955, 0.0031067614909261465, 0.004079591948539019, 0.014833949506282806, 0.007694303058087826, 0.004156575072556734, 0.00304338033311069, 0.0023176923859864473, 0.0011085335863754153, 0.002815164625644684, 0.016842998564243317, 0.004262932576239109, 0.004921110812574625, 0.02827286161482334, 0.004484141245484352, 0.0024333735927939415, 0.028699269518256187, 0.00012513868568930775, 0.0013902968494221568, 0.0012898135464638472, 0.0023982913699001074, 0.005989062134176493, 0.0020141438581049442, 0.0021753862965852022, 0.02974412962794304, 0.0004120368103031069, 0.005665319040417671, 0.01458650641143322, 9.895582479657605e-06, 0.0012424159795045853, 0.00902614090591669, 9.431926628167275e-06, 2.344869790249504e-05, 0.010700074024498463, 0.00566838588565588, 0.00033026369055733085, 0.005014993716031313, 0.0008387655834667385, 0.014985851012170315, 0.0003481075109448284, 0.00025079259648919106, 0.00282021495513618, 0.0005851442692801356, 0.030097225680947304, 0.014159412123262882, 1.953229578077753e-08, 0.0023368773981928825, 0.0016348459757864475, 0.005929967388510704, 0.026390744373202324, 0.0030330559238791466, 0.002397053875029087, 0.0034145282115787268, 0.001093351747840643, 0.011147684417665005, 0.001290861633606255, 0.02067379280924797, 0.0031375533435493708, 0.009914245456457138, 0.001034521497786045, 0.005759478081017733, 6.619966006837785e-05, 0.0003424005408305675, 0.00333358789794147, 0.006166944280266762, 0.0020285879727452993, 0.0003564226790331304, 0.0007740174187347293, 0.0006497006397694349, 0.006449840031564236, 6.692906026728451e-06, 0.009665552526712418, 0.00282213999889791, 0.00043808453483507037, 0.0033193351700901985, 5.510422488441691e-05, 0.00019431962573435158, 0.0005736365565098822, 0.018952293321490288, 0.00643151206895709, 0.0024428812321275473, 3.1660249533160822e-06, 0.0013649000320583582, 0.0008812358137220144, 0.001757134567014873, 0.0044952561147511005, 0.009952172636985779, 0.002276207320392132, 2.402980135229882e-05, 0.0012211663415655494, 0.0015321706887334585, 0.0004661748243961483, 0.0023798963520675898, 0.005328682251274586, 0.01162816770374775, 0.002033854369074106, 0.030946308746933937, 0.00029527873266488314, 0.0005976810352876782, 0.0007891359855420887, 0.002744358731433749, 1.9029921531910077e-05, 0.025996169075369835, 0.0022884502541273832, 0.000343549094395712, 8.987462933873758e-05, 0.016717830672860146, 0.0007317607523873448, 0.006040344014763832, 0.0016660061664879322, 0.002548735123127699, 0.0029536199290305376, 0.0006533893756568432, 0.02082713507115841, 0.0003209059650544077, 4.786096542375162e-05, 0.002050858223810792, 0.00029721614555455744, 0.011413206346333027, 0.00025285599986091256, 0.001429048366844654, 0.006697087083011866, 0.0004188388411421329, 0.006274563726037741, 0.005243607796728611, 1.811894981074147e-05, 0.0063125742599368095, 0.022634679451584816, 0.00038398668402805924, 0.0051192292012274265, 0.0009977576555684209, 0.010258115828037262, 0.0008255356224253774, 0.0012513811234384775, 0.0024722120724618435, 1.2051578778482508e-05, 0.03432677313685417, 0.010288338176906109, 0.033542461693286896, 0.004004000220447779, 0.00010547625424806029, 0.0015938373981043696, 4.5841574092264636e-07, 0.02625172957777977, 3.4494917144911597e-06, 0.002017044462263584, 0.0006390994531102479, 0.0004987720167264342, 0.006452690809965134, 1.0463472790434025e-05, 0.0013546576956287026, 0.017069760710000992, 0.005404316820204258, 0.00162607803940773, 0.00920236948877573, 0.0027377118822187185, 0.004021686036139727, 0.020471185445785522, 0.014628022909164429, 1.2570942089951131e-05, 0.00661411602050066, 0.00030848305323161185, 0.02104208804666996, 0.0001099410219467245, 0.0061583747155964375, 0.0026323478668928146, 0.0015530043747276068, 1.4383693269337527e-05, 0.008667919784784317, 1.9508145214786055e-06, 0.00365844857878983, 0.00016509612032677978, 0.0051241349428892136, 0.0008310764678753912, 0.005173574201762676, 0.01029996108263731, 0.004586151335388422, 0.0018696443876251578, 0.0044779786840081215, 0.007482900284230709, 6.350055627990514e-05, 0.0019900116603821516, 0.01936553604900837, 0.0002157075796276331, 0.0042561814188957214, 0.003976541105657816, 0.012480652891099453, 0.01602529175579548, 0.004640653729438782, 0.011105939745903015, 0.015027406625449657, 0.0010118496138602495, 0.00014666785136796534, 2.4654186745465267e-06, 0.00027433736249804497, 0.005354938097298145, 0.0008972546784207225, 0.012228143401443958, 0.004904366098344326, 0.008448470383882523, 0.0018896288238465786, 0.00013329224020708352, 0.0016078720800578594, 0.0029168229084461927, 0.0016764302272349596, 0.0069220601581037045, 0.0012893564999103546, 0.010673289187252522, 7.699009074713103e-07, 0.0003959474852308631, 3.236534394090995e-05, 0.0024653710424900055, 0.008220735937356949, 0.0039894175715744495, 0.0004115064220968634, 0.0009198891348205507, 0.001305817044340074, 0.0009249533759430051, 0.006273836828768253, 0.0009749659220688045, 0.0008360886131413281, 0.030217071995139122, 0.002941881073638797, 0.003027878236025572, 0.005265819374471903, 5.240353857516311e-05, 0.00043910439126193523, 0.002123667858541012, 0.00553356297314167, 0.001754368538968265, 0.0012601445196196437, 8.373501623282209e-05, 0.00026929620071314275, 0.0008475864306092262, 0.028619298711419106, 0.02440311573445797, 0.0009451386285945773, 0.005936277564615011, 0.014266612008213997, 0.0005072774947620928, 0.002223905408754945, 0.007513189222663641, 5.3389589993457776e-06, 0.0068319495767354965, 0.034841958433389664, 0.0006172801367938519, 3.457595448708162e-05, 0.006576422601938248, 0.0022453656420111656, 0.00027685167151503265, 0.004296976141631603, 0.003467216156423092, 0.0009165568044409156, 1.5336419778577692e-07, 0.014030762948095798, 0.010062774643301964, 0.007017691154032946, 5.65350148917787e-07, 0.007213087752461433, 0.0008463123231194913, 0.008235531859099865, 0.014634287916123867, 6.799585389671847e-05, 0.009530216455459595, 0.0029225170146673918, 0.007306599523872137, 0.0009180930792354047, 0.0037106871604919434, 0.00023245380725711584, 0.00027987081557512283, 0.013351229950785637, 0.002700120909139514, 0.00040599930798634887, 1.5963963960530236e-05, 2.6733227969089057e-06, 0.00013688243052456528, 0.007988879457116127, 0.00037678913213312626, 0.0003452547825872898, 0.0023688494693487883, 0.007314289454370737, 0.01941467635333538, 0.003896893933415413, 3.2360425393562764e-05, 0.0027024552691727877, 0.0006421823636628687, 0.0011969777988269925, 0.005269787274301052, 0.0016549889696761966, 0.007136873435229063, 0.0014211684465408325, 0.00012137811427237466, 0.00048472147318534553, 2.2542388251167722e-05, 0.02083308808505535, 0.005785107146948576, 0.0031572305597364902, 4.4533413756653317e-07, 0.016361113637685776, 0.015765905380249023, 0.009736678563058376, 0.009983688592910767, 0.0006413624505512416, 0.0006675684708170593, 0.0021125676576048136, 0.014664544723927975, 0.0028114269953221083, 0.007702442817389965, 0.0016509480774402618, 0.0019031754927709699, 0.006684600841253996, 0.0004911498399451375, 0.011743053793907166, 0.018624188378453255, 0.002098267897963524, 0.02471383474767208, 0.0009673521271906793, 0.007748642470687628, 0.029108146205544472, 0.0017024506814777851, 0.0009156746091321111, 2.0489219423325267e-06, 6.109174864832312e-05, 0.002236997941508889, 0.0001622894051251933, 0.0025540580973029137, 0.01845467835664749, 0.00027704460080713034, 0.002254752442240715, 0.012987257912755013, 0.001402919995598495, 0.00021526047203224152, 0.011284149251878262, 1.1146384167659562e-05, 0.014899086207151413, 0.0013684045989066362, 0.003929380793124437, 0.00015626907406840473, 0.002486389596015215, 0.0001553780894028023, 0.012343479320406914, 0.005470525473356247, 0.004346493165940046, 0.00016790024528745562, 0.005172609817236662, 5.778573904535733e-05, 0.0027818731032311916, 0.003835950745269656, 0.0036777653731405735, 0.0014461425598710775, 8.548313053324819e-05, 9.957439033314586e-05, 0.002061764243990183, 0.0066630421206355095, 0.006318386178463697, 0.00045452843187376857, 0.00017601238505449146, 0.005991800222545862, 0.0005709074321202934, 0.00043105121585540473, 0.007636750116944313, 0.006226347293704748, 0.0009151507401838899, 0.0020012494642287493, 0.009895171038806438, 0.000894558965228498, 0.012542291544377804, 0.0040526422671973705, 0.0004255582462064922, 0.002046638634055853, 0.00034349109046161175, 0.005400130990892649, 0.0015433385269716382]

进程已结束,退出代码0
