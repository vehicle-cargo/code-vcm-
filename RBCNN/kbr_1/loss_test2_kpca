D:\Anaconda\envs\train_env\python.exe "C:\Users\DELL\Desktop\论文\车货匹配代码\code(vcm)\RBCNN\pbr_1\pbr_BResNet.py"
C:\Users\DELL\Desktop\论文\车货匹配代码\code(vcm)\RBCNN\pbr_1\pbr_BResNet.py:319: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  train_data = torch.tensor(train_data)
torch.Size([1, 1])
tensor(2.4058, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(2.2864, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(2.2621, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(2.0750, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.8500, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(2.2914, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.9216, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.8147, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.0793, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.5594, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.2948, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.0385, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.3717, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.1918, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.8666, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.3484, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.1135, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.2524, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.6728, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.9995, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.2174, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.2131, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.7830, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.8005, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.5661, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.6547, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.6006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.7880, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.5425, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.7001, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.6508, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.8065, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.5231, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.4387, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.6175, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.4743, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.3128, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.3759, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.3967, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.3568, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.4556, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.3814, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.4221, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.2956, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.4092, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1937, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.2306, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.3861, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1579, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1849, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.3359, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1292, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1836, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1403, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1726, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.2439, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0859, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1396, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1449, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.2198, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1412, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.2225, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0471, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0513, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1549, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1566, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1445, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0941, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0681, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0865, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0987, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0493, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1467, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0544, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0730, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0868, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0234, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0114, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0819, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0606, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0599, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0522, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0340, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1087, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0828, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0707, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0632, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0711, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.4124e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0482, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0559, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0876, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0461, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0048, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0855, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0321, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0196, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0100, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0304, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0242, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0128, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0142, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0365, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0391, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0114, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0671, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0072, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0068, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0253, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0042, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0243, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0696, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0103, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0054, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0113, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0090, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0068, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0207, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0085, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0505, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0029, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0186, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0375, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0138, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0096, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0082, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0161, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0089, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0162, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0102, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0001, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0069, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0434, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0227, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0019, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(3.4705e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0069, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0170, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0074, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0043, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0060, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0078, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0149, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0053, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0109, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0071, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0040, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0015, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.8430e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0070, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0238, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0099, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0014, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0268, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0010, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(6.6837e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0016, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0022, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0048, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0218, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0010, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0013, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0097, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0298, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0045, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0707, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0249, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0059, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0028, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(8.5928e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0056, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0015, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0031, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0012, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0019, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0194, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0172, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0022, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0037, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0122, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0197, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0050, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0118, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0078, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0039, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0063, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0048, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0059, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0017, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.1125e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(4.8423e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0011, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0060, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0030, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0114, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0035, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0047, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.5131e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0015, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0021, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0195, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0154, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0430, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0005, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(2.5393e-08, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0061, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0057, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.9557e-06, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0015, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0020, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0015, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0026, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0005, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(3.9251e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0075, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0028, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0092, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0054, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0053, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0067, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0234, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0099, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0177, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0021, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0005, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0080, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0014, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0014, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0025, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0025, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0026, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0116, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0054, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0005, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0015, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(7.8061e-07, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0039, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0188, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0008, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(5.6358e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0022, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(4.2924e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.0365e-07, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(4.0806e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0120, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.7977e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0014, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0086, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0033, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0013, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0015, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0096, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0046, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(4.6048e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(7.2418e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0043, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0150, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0104, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0036, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0008, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.6461e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0012, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0027, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0038, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0024, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0015, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0005, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0176, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0067, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0008, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.0998e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0077, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0095, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0066, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0010, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0010, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0070, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0047, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(6.7180e-08, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(7.7727e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0132, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0017, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0073, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0063, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(8.9968e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0030, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0021, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0126, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0026, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0086, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0193, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0053, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0193, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0032, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0012, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(6.1420e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0083, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0023, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0052, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0140, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0058, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0099, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0022, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0143, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0058, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0099, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0268, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0037, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0018, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0053, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0043, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0121, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0032, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0001, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0013, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0037, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0034, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0229, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0052, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0008, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0045, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0132, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0185, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0040, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0034, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0021, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0028, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0027, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(3.9772e-06, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0056, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0036, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0087, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0022, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0013, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0020, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0019, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0053, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(8.5935e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(2.1097e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0065, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0234, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.1935e-07, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(7.8505e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0027, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0242, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0038, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0022, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(3.1518e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0220, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0059, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0007, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0074, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0060, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0075, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0082, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0024, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0059, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0025, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0028, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0021, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.1654e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0194, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0014, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0030, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0008, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0051, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0035, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0044, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0024, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0024, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(3.1697e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0071, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(5.1911e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0041, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(8.1165e-06, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0082, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0005, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0110, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0108, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0025, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(2.9652e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0005, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0028, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0036, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0041, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0099, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(2.7441e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0005, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0136, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0050, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0079, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0288, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0011, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0089, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0016, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0047, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0050, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0332, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0007, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0035, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0071, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0026, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0227, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0037, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0112, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0199, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0086, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0001, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0137, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0028, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0009, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0227, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0005, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0037, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0008, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0038, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0055, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0022, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0010, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0033, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0013, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0037, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0109, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0118, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0071, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0047, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0015, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(6.2060e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(6.7939e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0013, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0132, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0017, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0176, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0013, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0019, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0167, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0024, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0103, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(3.0449e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0019, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.8320e-06, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(2.0358e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0009, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0018, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0058, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0050, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0175, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0017, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0213, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0023, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0001, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0090, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0049, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0135, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0103, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0121, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0015, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0018, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0005, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0186, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0007, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(3.9655e-09, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0049, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
ResNet(
  (conv1): BBBConv2d()
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): BBBConv2d()
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
      (conv2): BBBConv2d()
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): BBBConv2d()
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
      (conv2): BBBConv2d()
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (2): BasicBlock(
      (conv1): BBBConv2d()
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
      (conv2): BBBConv2d()
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (fc1): BBBLinear()
  (fc2): BBBLinear()
)
C:\Users\DELL\Desktop\论文\车货匹配代码\code(vcm)\RBCNN\pbr_1\pbr_BResNet.py:351: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  new_test_data = torch.tensor(new_test_data)
Predicted output: [[0.3205825]]
[2.4058473110198975, 2.28641676902771, 2.2621195316314697, 2.0750443935394287, 1.8500440120697021, 2.2913620471954346, 1.9215612411499023, 1.814678430557251, 1.0793190002441406, 1.5593786239624023, 1.2947791814804077, 1.0384904146194458, 1.3716952800750732, 1.1918306350708008, 0.8666009306907654, 1.3483625650405884, 1.1135257482528687, 1.2523634433746338, 0.6728290915489197, 0.9995296597480774, 1.2173960208892822, 1.2131232023239136, 0.7829960584640503, 0.8004939556121826, 0.5660876035690308, 0.6546939611434937, 0.6005697846412659, 0.7879538536071777, 0.5424501895904541, 0.7001128196716309, 0.6507954597473145, 0.8064577579498291, 0.5231336951255798, 0.438711553812027, 0.617458164691925, 0.47433900833129883, 0.31280216574668884, 0.37590527534484863, 0.3966876268386841, 0.356834352016449, 0.4555819630622864, 0.3813968896865845, 0.4220856726169586, 0.29564180970191956, 0.40917909145355225, 0.19373781979084015, 0.23064234852790833, 0.38607484102249146, 0.1578570306301117, 0.18490749597549438, 0.33592307567596436, 0.12922018766403198, 0.18356740474700928, 0.1403343379497528, 0.17255909740924835, 0.24389927089214325, 0.08588867634534836, 0.13962700963020325, 0.1449263095855713, 0.21977825462818146, 0.141235813498497, 0.22247883677482605, 0.04712780565023422, 0.05134987831115723, 0.15490278601646423, 0.15656469762325287, 0.14454737305641174, 0.09407124668359756, 0.06814364343881607, 0.08649620413780212, 0.0987183153629303, 0.04929249733686447, 0.14670227468013763, 0.05438999459147453, 0.07300201058387756, 0.0867721363902092, 0.02336842566728592, 0.011376249603927135, 0.08191423863172531, 0.060597583651542664, 0.0598725825548172, 0.05215464532375336, 0.034007154405117035, 0.10873551666736603, 0.08280819654464722, 0.07067178934812546, 0.06319653242826462, 0.07113240659236908, 1.4124455447017681e-05, 0.048210982233285904, 0.05587085336446762, 0.08764941990375519, 0.04605775699019432, 0.004760001320391893, 0.08551131933927536, 0.032124653458595276, 0.019638679921627045, 0.009959532879292965, 0.030388474464416504, 0.024165406823158264, 0.012791823595762253, 0.014247098006308079, 0.03651055321097374, 0.039133794605731964, 0.011401556432247162, 0.06710082292556763, 0.0072073861956596375, 0.006833718623965979, 0.025313183665275574, 0.004190253093838692, 0.024326270446181297, 0.06959455460309982, 0.010302743874490261, 0.005416638683527708, 0.011303380131721497, 0.009003518149256706, 0.006808754988014698, 0.020713143050670624, 0.008456983603537083, 0.05049500614404678, 0.0029434540774673223, 0.01861359179019928, 0.037522368133068085, 0.00026325287763029337, 0.013817144557833672, 0.009604436345398426, 0.008208292536437511, 0.016061829403042793, 0.008906379342079163, 0.016169842332601547, 0.010235695168375969, 0.00011910103785339743, 0.0003561329795047641, 0.006928848568350077, 0.04344881325960159, 0.022697562351822853, 0.0018717970233410597, 3.470452793408185e-05, 0.006867521908134222, 0.016988037154078484, 0.00738013768568635, 0.004338301718235016, 0.005968198645859957, 0.007786191999912262, 0.014944309368729591, 0.0052688526920974255, 0.010899641551077366, 0.007066607009619474, 0.0039791143499314785, 0.0014997401740401983, 1.8429804185871035e-05, 0.00703702075406909, 0.02377873845398426, 0.009860323742032051, 0.001403559697791934, 0.02681969664990902, 0.0010163490660488605, 6.683721585432068e-05, 0.0015998490853235126, 0.0022166843991726637, 0.0047850534319877625, 0.021808084100484848, 0.0009534789714962244, 0.0013466238742694259, 0.009724276140332222, 0.029795724898576736, 0.004463454242795706, 0.07066065073013306, 0.024941541254520416, 0.00591253349557519, 0.0027981249149888754, 8.59281572047621e-05, 0.005631768144667149, 0.0014704471686854959, 0.0030558619182556868, 0.001184222404845059, 0.00018936385458800942, 0.0018576278816908598, 0.019423194229602814, 0.017224449664354324, 0.0021516697015613317, 0.003703679423779249, 0.012201598845422268, 0.019715094938874245, 0.005002340767532587, 0.011819446459412575, 0.0078266691416502, 0.003889530198648572, 0.006309434771537781, 0.004765382036566734, 0.005862769205123186, 0.0016554800095036626, 1.1124802767881192e-05, 4.842258204007521e-05, 0.0011160855647176504, 0.005990339908748865, 0.0030094098765403032, 0.011372657492756844, 0.0035441319923847914, 0.0047269221395254135, 1.5130537576624192e-05, 0.00019574802718125284, 0.0014617586275562644, 0.002084167907014489, 0.019457537680864334, 0.015360139310359955, 0.043033283203840256, 0.0002916483208537102, 0.0004990476300008595, 2.5393383396021818e-08, 0.00611264118924737, 0.005692527629435062, 1.9557294308469864e-06, 0.0014838231727480888, 0.0019708259496837854, 0.0014857340138405561, 0.0026031495071947575, 0.0005161337903700769, 3.925115379388444e-05, 0.007481505628675222, 0.002812662860378623, 0.0005985388997942209, 0.009232312440872192, 0.0053953444585204124, 0.005250602029263973, 0.006680627353489399, 0.023426389321684837, 0.009900879114866257, 0.017695948481559753, 0.0021495965775102377, 0.0005288863321766257, 0.00802420824766159, 0.0014145139139145613, 0.0014303104253485799, 0.0025387981440871954, 0.0024828764144331217, 0.002608894370496273, 0.01161426305770874, 0.0005512347561307251, 0.00535205751657486, 0.000505696632899344, 0.0015434825327247381, 0.00015393155626952648, 7.806069675098115e-07, 0.003946395590901375, 0.000609013601206243, 0.018765466287732124, 0.0007664419827051461, 5.635812703985721e-05, 0.002201556460931897, 4.2923769797198474e-05, 1.0365469194084653e-07, 4.080627331859432e-05, 0.012042652815580368, 1.797664117475506e-05, 0.001377780456095934, 0.00858115591108799, 0.0032931952737271786, 0.0012777664232999086, 0.0014787075342610478, 0.00963833462446928, 0.004590596538037062, 4.604842979460955e-05, 7.241796265589073e-05, 0.004301191307604313, 0.014988141134381294, 0.010426311753690243, 0.00035095412749797106, 0.0035614764783531427, 0.0008389175054617226, 1.6460620827274397e-05, 0.0012056772829964757, 0.0026613615918904543, 0.0002705560182221234, 0.0005918671959079802, 0.003753176424652338, 0.0023554223589599133, 0.001465183449909091, 0.0005246659857220948, 0.017614493146538734, 0.006659495644271374, 0.0008391574956476688, 1.0997537174262106e-05, 0.007741429843008518, 0.009488404728472233, 0.006560961250215769, 0.0009668136481195688, 0.0009848220506682992, 0.006996184587478638, 0.004739835858345032, 6.717986877902149e-08, 7.772665412630886e-05, 0.013155640102922916, 0.0017268789233639836, 0.007346141152083874, 0.006280270870774984, 8.996760880108923e-05, 0.003044652985408902, 0.002141358098015189, 0.012606426142156124, 0.00255972589366138, 0.00859132967889309, 0.019316749647259712, 0.0053246039897203445, 0.01928393356502056, 0.003155793994665146, 0.001237779390066862, 6.141993071651086e-05, 0.00829149130731821, 0.002259740838780999, 0.005210245493799448, 0.013996192254126072, 0.005780186969786882, 0.009884309023618698, 0.0021531768143177032, 0.014255212619900703, 0.005822553299367428, 0.00036720390198752284, 0.00991545058786869, 0.026794064790010452, 0.0037165714893490076, 0.0005746284150518477, 0.0017574593657627702, 0.005336083471775055, 0.004336382262408733, 0.012135273776948452, 0.003231019712984562, 0.0001386615476803854, 0.0013351042289286852, 0.003700299421325326, 0.0034412508830428123, 0.02290595881640911, 0.005246469751000404, 0.000803575268946588, 0.004473167937248945, 0.013240772299468517, 0.018541822209954262, 0.003998618107289076, 0.003434949554502964, 0.002071048365905881, 0.002769205719232559, 0.0027158637531101704, 3.977160758950049e-06, 0.005582917481660843, 0.0005988539196550846, 0.0036396158393472433, 0.00867852009832859, 0.0022069686092436314, 0.001294956193305552, 0.00016593349573668092, 0.001966266892850399, 0.0018879022682085633, 0.005325160454958677, 8.593478560214862e-05, 2.109660636051558e-05, 0.006500135641545057, 0.023375187069177628, 1.1934849908357137e-07, 7.850526890251786e-05, 0.002724051708355546, 0.00019699004769790918, 0.02423674985766411, 0.0038260691799223423, 0.002175393281504512, 3.1517804018221796e-05, 0.021989112719893456, 0.00020991629571653903, 0.00590946339070797, 0.0006546819931827486, 0.007377961650490761, 0.006008825730532408, 0.00752252759411931, 0.008216572925448418, 0.002404032042250037, 0.0059471228159964085, 0.0005941852577961981, 0.0025262869894504547, 0.0003802820574492216, 0.002810336649417877, 0.0021336586214601994, 1.16538021757151e-05, 0.019384266808629036, 0.00030632244306616485, 0.0013500141212716699, 0.002960643731057644, 0.0007726325420662761, 0.005145434755831957, 0.003458527848124504, 0.004387537948787212, 0.0024101322051137686, 0.002369650173932314, 3.169674891978502e-05, 0.00019430633983574808, 0.0070847016759216785, 5.191130185266957e-05, 0.004066034685820341, 8.116533535940107e-06, 0.008197478950023651, 0.0004600365646183491, 0.010965297929942608, 0.010808383114635944, 0.0024749618023633957, 2.9652283046743833e-05, 0.000479110109154135, 0.0028272196650505066, 0.0035517190117388964, 0.004068851470947266, 0.009943918325006962, 0.00037405898910947144, 2.7440666599432006e-05, 0.0004800355527549982, 0.013629595749080181, 0.005046173930168152, 0.007926876656711102, 0.028820866718888283, 0.0011032887268811464, 0.00886236596852541, 0.0016281120479106903, 0.004728459287434816, 0.0001645658048801124, 0.0050374302081763744, 0.03323035687208176, 0.0006834634114056826, 0.003507656278088689, 0.0005579470889642835, 0.007116630207747221, 0.0026136671658605337, 0.02271580882370472, 0.0036590811796486378, 0.0002782055817078799, 0.00023139585391618311, 0.0002882078115362674, 0.011157538741827011, 0.019913017749786377, 0.008557341992855072, 0.00042745700920931995, 0.00010165827552555129, 0.0003040389565285295, 0.013712333515286446, 0.0027577125001698732, 0.0009288776200264692, 0.02271692268550396, 0.0005062745185568929, 0.003737578634172678, 0.00044829215039499104, 0.0008388501591980457, 0.0005961497663520277, 0.003797027748078108, 0.00551788043230772, 0.0021689177956432104, 0.000981006189249456, 0.0032648188062012196, 0.001320883515290916, 0.0037087160162627697, 0.010946555994451046, 0.011764426715672016, 0.007106331177055836, 0.004661948420107365, 0.0015032069059088826, 6.205968384165317e-05, 6.793910142732784e-05, 0.0013184866402298212, 0.013219540007412434, 0.0016855908324941993, 0.01760610193014145, 0.001308137783780694, 0.0019176513887941837, 0.00032458093483000994, 0.01666875183582306, 0.0024401305709034204, 0.01034755352884531, 3.0448536563199013e-05, 0.0018677711486816406, 1.8320490653422894e-06, 2.0358253095764667e-05, 0.0009002307779155672, 0.00015792758495081216, 0.00181070517282933, 0.005760663654655218, 0.005023496225476265, 0.017484713345766068, 0.0017214413965120912, 0.02132859267294407, 0.0022980566136538982, 0.00011732021084753796, 0.009048798121511936, 0.004853729158639908, 0.01351372804492712, 0.010292693972587585, 0.012055695988237858, 0.0014761049533262849, 0.001801079954020679, 0.00035915730404667556, 0.0005387008422985673, 0.01864401251077652, 0.0007064967066980898, 0.0003624621604103595, 3.9655114747461084e-09, 0.0048889946192502975, 0.00023496920766774565]

进程已结束,退出代码0
