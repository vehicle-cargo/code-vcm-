D:\Anaconda\envs\train_env\python.exe "C:\Users\DELL\Desktop\论文\车货匹配代码\code(vcm)\RBCNN\pbr_1\pbr_BResNet.py"
C:\Users\DELL\Desktop\论文\车货匹配代码\code(vcm)\RBCNN\pbr_1\pbr_BResNet.py:319: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  train_data = torch.tensor(train_data)
torch.Size([1, 1])
tensor(2.0293, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.7433, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.6839, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.6175, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.6344, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.4991, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.2351, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.3238, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.2587, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.2848, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.2382, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.0925, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.1899, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.1507, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.8928, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.0595, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.0754, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.9851, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.7781, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.8739, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.8858, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.4898, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.5545, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.7386, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.6573, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.7901, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.8618, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.5156, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.6257, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.6189, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.4274, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.3717, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.5984, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.6281, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.4384, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.4025, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.4398, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.3893, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.3544, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.4991, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.3495, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.3249, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.3535, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.3177, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.3121, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.3817, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.2740, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.3775, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.2389, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.3078, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.2919, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.2462, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.2385, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1641, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.2429, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1290, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1618, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1780, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.2262, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1455, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.2730, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1655, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.2555, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1776, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1823, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1828, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0769, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1638, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1128, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1191, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.2047, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1646, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1297, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1733, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0555, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0594, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0631, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1228, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1192, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0475, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1357, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1176, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0543, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0483, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0861, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0619, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1140, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0901, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0960, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1455, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0338, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1304, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0777, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0449, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0639, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0348, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0730, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0627, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0670, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0775, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.1204, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0504, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0329, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0581, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0077, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0194, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0129, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0238, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0520, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0129, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0302, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0234, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0043, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0094, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0400, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0168, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0120, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0153, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0500, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0583, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0241, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0175, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0141, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0153, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0265, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0127, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0668, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0298, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0067, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0133, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0259, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0332, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0013, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0234, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0209, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0100, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0014, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0211, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0204, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(8.1477e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0051, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0192, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0395, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0443, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0147, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0023, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0095, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0036, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0011, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0007, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0007, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0419, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0065, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0024, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0069, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0038, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(2.2413e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0019, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0023, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0005, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0044, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0100, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0220, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0188, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0144, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0084, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0140, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(5.2917e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0032, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0396, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0067, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0219, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0046, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0008, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0102, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0073, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(9.4079e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0254, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0037, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0050, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0122, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0060, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(2.1128e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0229, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0064, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0074, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0068, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0031, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0093, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0017, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0104, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0001, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0017, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0025, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0117, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0042, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0043, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0066, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(2.6699e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0031, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0114, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0078, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0009, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0045, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0034, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0008, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0020, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0001, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(2.5571e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0011, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0079, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0001, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0007, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0001, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0175, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0037, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(9.7890e-06, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0018, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0082, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0030, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0187, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0022, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0147, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0051, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0093, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0102, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0008, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0080, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0010, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0019, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0049, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0058, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0021, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0142, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0121, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0030, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0025, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0029, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0008, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0030, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0035, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0119, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0012, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0056, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0142, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0011, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0049, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0149, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0034, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0010, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0108, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0054, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0011, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0145, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0062, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0056, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0063, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0008, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0128, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0028, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0127, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0097, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0030, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(5.1612e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0021, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0086, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0037, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0016, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0055, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0017, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(5.5289e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0005, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0015, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0098, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0007, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(6.5293e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0040, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0011, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0077, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0013, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0021, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0029, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0023, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0204, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0018, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0028, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0049, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0020, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(8.6891e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0042, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0099, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0027, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0068, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0062, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0032, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0075, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0115, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0035, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0005, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0066, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0038, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0178, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0015, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0031, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0253, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0077, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0075, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0013, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0032, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0070, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0039, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0135, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0210, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0030, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0039, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0148, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0009, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0005, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0187, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0017, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(3.4834e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0020, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0001, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0023, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0076, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0025, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0159, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.6514e-08, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0028, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0010, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0026, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0027, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0057, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0015, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0016, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0215, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0020, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0054, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0103, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0012, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0033, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0036, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0061, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0023, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0112, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0038, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0007, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.7202e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0019, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0007, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0030, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0010, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0017, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0032, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0105, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0027, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0020, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0007, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0015, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0076, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0009, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0115, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(6.7089e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0047, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(2.5543e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0010, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0053, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0043, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0101, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0001, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0068, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0129, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0174, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0020, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0018, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0013, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(2.9872e-06, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0099, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.8948e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(3.4494e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0013, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0230, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0118, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0029, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0011, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0021, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0017, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0032, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(6.1632e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0046, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0048, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0007, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0048, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0015, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0035, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0036, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0006, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0088, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0132, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0109, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0143, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0116, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0058, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0005, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0031, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0005, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0007, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0024, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0057, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0020, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0074, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0001, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0142, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0032, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0003, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0008, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0097, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0019, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0035, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0062, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0010, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0169, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0033, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0009, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0048, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.4404e-07, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0074, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0005, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0073, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0167, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0008, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0023, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0024, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0004, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0007, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0001, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0039, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0076, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.7447e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0020, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(3.2839e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(5.2918e-07, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.9138e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0010, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(3.5480e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0058, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.3764e-05, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0005, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0074, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0033, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0017, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(7.2646e-06, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0024, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0051, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(1.3604e-07, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0029, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0002, device='cuda:0', grad_fn=<MseLossBackward0>)
torch.Size([1, 1])
tensor(0.0024, device='cuda:0', grad_fn=<MseLossBackward0>)
ResNet(
  (conv1): BBBConv2d()
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): BBBConv2d()
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
      (conv2): BBBConv2d()
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): BBBConv2d()
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
      (conv2): BBBConv2d()
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (2): BasicBlock(
      (conv1): BBBConv2d()
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
      (conv2): BBBConv2d()
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (fc1): BBBLinear()
  (fc2): BBBLinear()
)
C:\Users\DELL\Desktop\论文\车货匹配代码\code(vcm)\RBCNN\pbr_1\pbr_BResNet.py:351: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  new_test_data = torch.tensor(new_test_data)
Predicted output: [[0.33657324]]
[2.0292718410491943, 1.7432581186294556, 1.6839032173156738, 1.6175326108932495, 1.6343512535095215, 1.4991134405136108, 1.2350811958312988, 1.323838233947754, 1.2587162256240845, 1.2847684621810913, 1.2382076978683472, 1.092508316040039, 1.1899014711380005, 1.150661826133728, 0.892804741859436, 1.0594979524612427, 1.0753965377807617, 0.9850881099700928, 0.7780820727348328, 0.8739135265350342, 0.8857957720756531, 0.4897977411746979, 0.5545271635055542, 0.7385765910148621, 0.6572622060775757, 0.7901163697242737, 0.8617727756500244, 0.5155590176582336, 0.6256904602050781, 0.6188550591468811, 0.42742374539375305, 0.37170374393463135, 0.5983707308769226, 0.6280808448791504, 0.43841487169265747, 0.40245580673217773, 0.4397544264793396, 0.3893054127693176, 0.3544098734855652, 0.4990710914134979, 0.3494797945022583, 0.3249017596244812, 0.3534683287143707, 0.3176591992378235, 0.31212007999420166, 0.3817245662212372, 0.27398836612701416, 0.37745940685272217, 0.23890931904315948, 0.3077978491783142, 0.29191869497299194, 0.24619799852371216, 0.2385370433330536, 0.16408134996891022, 0.2428506314754486, 0.12901757657527924, 0.16182203590869904, 0.17801687121391296, 0.22617748379707336, 0.14546345174312592, 0.2729746401309967, 0.16550686955451965, 0.255485862493515, 0.1776270717382431, 0.1823171228170395, 0.18275228142738342, 0.07688864320516586, 0.16381703317165375, 0.11277718842029572, 0.1191084012389183, 0.20467659831047058, 0.16461239755153656, 0.1297025829553604, 0.17331016063690186, 0.05552731454372406, 0.05936514958739281, 0.06307438015937805, 0.12284823507070541, 0.11922650784254074, 0.04754973575472832, 0.13569968938827515, 0.1176089495420456, 0.05432708561420441, 0.04830058291554451, 0.08608904480934143, 0.06192478910088539, 0.11397822201251984, 0.0901060551404953, 0.09603121876716614, 0.145530104637146, 0.03375179320573807, 0.13035641610622406, 0.07770384103059769, 0.04485491290688515, 0.06390252709388733, 0.03477710857987404, 0.07300224900245667, 0.06273410469293594, 0.06703522056341171, 0.07746405154466629, 0.12036749720573425, 0.050393298268318176, 0.03289352357387543, 0.058097146451473236, 0.007697382476180792, 0.019383415579795837, 0.012876939959824085, 0.02384459786117077, 0.05196839198470116, 0.012908609583973885, 0.03022746555507183, 0.023414243012666702, 0.004343940876424313, 0.009415742941200733, 0.0400194451212883, 0.016772447153925896, 0.012000033631920815, 0.015277314931154251, 0.050020720809698105, 0.05830667167901993, 0.024146735668182373, 0.017497625201940536, 0.014123358763754368, 0.01530403271317482, 0.02648085728287697, 0.012745014391839504, 0.06681998819112778, 0.0005742384237237275, 0.029818415641784668, 0.0004216026864014566, 0.006674928590655327, 0.01329159177839756, 0.025869455188512802, 0.03315310552716255, 0.0013413577107712626, 0.02344164066016674, 0.02086491882801056, 0.009951616637408733, 0.001387603348121047, 0.021109314635396004, 0.020429478958249092, 8.14765808172524e-05, 0.005144648253917694, 0.01923300512135029, 0.0395394042134285, 0.04427020996809006, 0.01466852892190218, 0.0023188560735434294, 0.009481845423579216, 0.003551164874807, 0.0011095578083768487, 0.000658976030535996, 0.0007130549638532102, 0.04192999750375748, 0.006475943140685558, 0.002406914485618472, 0.006872408092021942, 0.0038184630684554577, 2.241282163595315e-05, 0.0018997745355591178, 0.0022993481252342463, 0.000519098190125078, 0.0043944101780653, 0.010046496987342834, 0.02195892296731472, 0.01876640133559704, 0.014361221343278885, 0.008446402847766876, 0.013966834172606468, 5.291717388899997e-05, 0.0031799885910004377, 0.03958306089043617, 0.0066765062510967255, 0.0004146106366533786, 0.021856660023331642, 0.004583798348903656, 0.0008252539555542171, 0.010162970051169395, 0.00729178823530674, 9.407901961822063e-05, 0.02541588991880417, 0.0036866320297122, 0.0049977595917880535, 0.01220011431723833, 0.0060395486652851105, 2.112782749463804e-05, 0.00016214554489124566, 0.022903896868228912, 0.006369806360453367, 0.007415757980197668, 0.006843734532594681, 0.0030748932622373104, 0.0092678377404809, 0.001738303923048079, 0.010368185117840767, 0.00012195404269732535, 0.0017086082370951772, 0.0025106072425842285, 0.011692711152136326, 0.004219395574182272, 0.004265657160431147, 0.0001574358466314152, 0.0066421665251255035, 2.669919740583282e-05, 0.0031057647429406643, 0.011403166688978672, 0.007815456949174404, 0.00036281629581935704, 0.0008911598706617951, 0.0006064113113097847, 0.0002930904447566718, 0.00043699360685423017, 0.004533682484179735, 0.0034331087954342365, 0.0008055042708292603, 0.001983839785680175, 0.00014029325393494219, 2.5571211153874174e-05, 0.0010898237815126777, 0.00041411197162233293, 0.007897917181253433, 0.00010007790842792019, 0.0007311070803552866, 0.00011733441351680085, 0.017528247088193893, 0.003728605341166258, 9.788996976567432e-06, 0.0018498008139431477, 0.008248518221080303, 0.0029890506993979216, 0.018703369423747063, 0.002196704037487507, 0.014710729010403156, 0.005105080548673868, 0.00929959025233984, 0.010247915983200073, 0.0007986372802406549, 0.008040960878133774, 0.0010066829854622483, 0.0018869234481826425, 0.004937521182000637, 0.005756031721830368, 0.002140483818948269, 0.014239603653550148, 0.012079987674951553, 0.0030493217054754496, 0.002494219923391938, 0.002915329532697797, 0.0003073466650675982, 0.0008459794335067272, 0.002974563743919134, 0.003463486209511757, 0.0005703002098016441, 0.011944448575377464, 0.0011966231977567077, 0.005635835230350494, 0.014188999310135841, 0.0004410750116221607, 0.0006310917669907212, 0.0010582073591649532, 0.004941936582326889, 0.014936805702745914, 0.0033960258588194847, 0.0010257806861773133, 0.010759707540273666, 0.005421649664640427, 0.0010763300815597177, 0.014482168480753899, 0.006191247142851353, 0.005608853884041309, 0.0062737492844462395, 0.0008045065333135426, 0.012761781923472881, 0.0001801968173822388, 0.002796643180772662, 0.012702979147434235, 0.009743458591401577, 0.003008216619491577, 5.161240915185772e-05, 0.002070104470476508, 0.000627380795776844, 0.00855932105332613, 0.003740793326869607, 0.0015966822393238544, 0.0001558372168801725, 0.005509926937520504, 0.0017273867269977927, 0.0006265375413931906, 5.528932888410054e-05, 0.00048677672748453915, 0.0015284947585314512, 0.009838726371526718, 0.0007437482126988471, 6.529323582071811e-05, 0.004005609080195427, 0.0011450710007920861, 0.007705213036388159, 0.001292122178710997, 0.002072439994663, 0.0029381627682596445, 0.002316428581252694, 0.02036268264055252, 0.001831197994761169, 0.002752590924501419, 0.004898413550108671, 0.0003319393435958773, 0.001976445084437728, 8.689056267030537e-05, 0.00419140700250864, 0.009899259544909, 0.00015992482076399028, 0.0026998654939234257, 0.006848976947367191, 0.006249011494219303, 0.00037181557854637504, 0.003197955898940563, 0.007540016435086727, 0.011460356414318085, 0.003496263176202774, 0.00045024280552752316, 0.006625233218073845, 0.0038292882964015007, 0.017831293866038322, 0.0015090152155607939, 0.0030521529261022806, 0.02528602071106434, 0.0077087292447686195, 0.0003077533037867397, 0.00753952469676733, 0.0001707879564492032, 0.0013489280827343464, 0.0031734611839056015, 0.007015322335064411, 0.003910393454134464, 0.013474466279149055, 0.00041078912909142673, 0.0003968119854107499, 0.021039845421910286, 0.00025680751423351467, 0.0029830054845660925, 0.0039246296510100365, 0.014776835218071938, 0.0009338126401416957, 0.0004669221816584468, 0.018671873956918716, 0.001700971624813974, 3.4834218240575865e-05, 0.0020280119497328997, 0.00014000677037984133, 0.002271170960739255, 0.007581468205899, 0.002536008832976222, 0.01592317409813404, 0.0005923908320255578, 0.00017824106907937676, 1.6514206890860805e-08, 0.0006060224259272218, 0.0006199634517543018, 0.002820634515956044, 0.0009784745052456856, 0.00255498755723238, 0.002656124532222748, 0.00566911743953824, 0.001452630152925849, 0.0015846678288653493, 0.02146662212908268, 0.002002200111746788, 0.005427989177405834, 0.010294892825186253, 0.0011790550779551268, 0.0032622988801449537, 0.0035927833523601294, 0.006132835987955332, 0.002295037265866995, 0.00019754341337829828, 0.011211816221475601, 0.0038240563590079546, 0.0006811902858316898, 0.00039658049354329705, 1.7202248272951692e-05, 0.0002918947138823569, 0.0018648228142410517, 0.0006801421986892819, 0.0030251089483499527, 0.0009836178505793214, 0.0016685945447534323, 0.0032181544229388237, 0.01047893799841404, 0.0026816637255251408, 0.0020475867204368114, 0.0006734976195730269, 0.0014911012258380651, 0.007567010819911957, 0.0009236332844011486, 0.011479555629193783, 6.708937871735543e-05, 0.00015199719928205013, 0.004688214510679245, 2.5542585717630573e-05, 0.0009516889695078135, 0.005305970087647438, 0.004269578028470278, 0.0101093128323555, 0.00014711647236254066, 0.006843117997050285, 0.012936410494148731, 0.01736721768975258, 0.001954594161361456, 0.001821228419430554, 0.001253987429663539, 0.00037187879206612706, 0.0001831710251281038, 2.987213974847691e-06, 0.009940382093191147, 1.894823435577564e-05, 0.00017332892457488924, 3.449416544754058e-05, 0.001349181984551251, 0.0002863106201402843, 0.02298426814377308, 0.011810444295406342, 0.0029150880873203278, 0.001119246007874608, 0.002069217851385474, 0.001689047901891172, 0.0031926999799907207, 6.163219222798944e-05, 0.0045533450320363045, 0.004800948780030012, 0.0006639351486228406, 0.004815819673240185, 0.0015207492979243398, 0.0034655386116355658, 0.003557739080861211, 0.0005633849650621414, 0.008795528672635555, 0.013236095197498798, 0.010874612256884575, 0.014256857335567474, 0.01159664336591959, 0.00576692633330822, 0.0004857804160565138, 0.0030961192678660154, 0.000534681195858866, 0.0007108045974746346, 0.002377327997237444, 0.0057067833840847015, 0.0001908826525323093, 0.00021411858324427158, 0.001958683365955949, 0.007407450117170811, 0.00013357763236854225, 0.014186451211571693, 0.0003508748486638069, 0.003218374215066433, 0.0002516017120797187, 0.0008426627609878778, 0.009676560759544373, 0.0019042170606553555, 0.003467135364189744, 0.006236239802092314, 0.0010050685377791524, 0.016892699524760246, 0.0032900047954171896, 0.0009407139150425792, 0.0048069762997329235, 1.4404497505893232e-07, 0.007370713632553816, 0.00046920208842493594, 0.007275713607668877, 0.01667669788002968, 0.0007783374167047441, 0.0023263534530997276, 0.002444230718538165, 0.0004136245115660131, 0.0007472846773453057, 0.00012016695836791769, 0.003938768524676561, 0.007588289212435484, 1.7447115169488825e-05, 0.0020342066418379545, 0.00017220154404640198, 3.2838743209140375e-05, 5.291760771797271e-07, 1.9138111383654177e-05, 0.0010383822955191135, 3.5479544749250636e-05, 0.005825837608426809, 1.3763891729468014e-05, 0.0004954496980644763, 0.00735520152375102, 0.0032689818181097507, 0.0016861757030710578, 7.2646002990950365e-06, 0.0023513135965913534, 0.005113797727972269, 1.360381816084555e-07, 0.0029135083314031363, 0.00022810098016634583, 0.002371446695178747]

进程已结束,退出代码0
